on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  profile:
    strategy:
      fail-fast: false
      matrix:
        instances:
          - 1
          - 2
          # - 3 #  3 generally seemed to be a bit slower? Could just be resource constraints though... (should try on k8s? :D)
        async:
          - 80
          - 110
          - 140
        images:
          # - wikibase/wikibase:1.33-base
          # - wikibase/wikibase:1.34-base
          - wikibase/wikibase:1.35-base
        sql:
          # - mariadb:10.3 # No real difference between 10.3 and 10.5 mariadb, so just use the newest one
          - mariadb:10.5
          # - mysql:5.7 # MariaDB seems to generally be the faster choice...
          # - mysql:8.0 # Broken! and thus untested... (Probably because the install fails? :)
        settings:
          # - default
          - lightweight
          - lightweight-wbNoSharedCache
          - lightweight-mwCacheDirectory
          # - mwCacheDirectory
          # - mwNoJobs
          # - wbNoChangesTable
          # - wbNewTerms
          # - wbOwnIdConnection
        loads:
          - 2000EmptyItems
          # - 2000SingleTermItems
          # - 2000MultiTermItems
          - 2000FullishItems
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run containers
        run: |
          PROFILE_SETTINGS=${{ matrix.settings }} PROFILE_IMAGE=${{ matrix.images }} PROFILE_SQL=${{ matrix.sql }} docker-compose up -d mysql wikibase1
          ./docker-compose-wait1.sh
          PROFILE_SETTINGS=${{ matrix.settings }} PROFILE_IMAGE=${{ matrix.images }} PROFILE_SQL=${{ matrix.sql }} docker-compose up -d wikibase2
          ./docker-compose-wait2.sh
          sleep 5
      - name: Perform test
        run: |
          date +%s >> start.out
          ASYNC=${{ matrix.async }} INSTANCES=${{ matrix.instances }} ./loads/${{ matrix.loads }}.sh
          date +%s >> stop.out
      - name: Stop containers
        run: docker-compose down
      - name: Output Result
        id: output-calc
        run: |
          echo "Start time: " $(cat start.out)
          echo "Stop time: " $(cat stop.out)
          let length=$(cat stop.out)-$(cat start.out)
          echo "Elapsed time: " $length
          echo "::set-output name=elapsed::$(echo ${length})"
          # https://docs.github.com/en/rest/reference/checks#annotations-items
          echo "[{\"title\":\"${{ matrix.settings }} ${{ matrix.loads }} Async:${{ matrix.async }} Instances:${{ matrix.instances }}\",\"message\":\"Elapsed time: ${length}\",\"path\":\".github/workflows/test.yml\",\"start_line\":1,\"end_line\":1,\"annotation_level\":\"notice\"}]" > annotations.json
      - name: Annotate
        uses: kibalabs/github-action-create-annotations@main
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          json-file-path: './annotations.json'
      - name: Send result to IFTTT
        uses: "hugoalh/GitHubAction.SendToIFTTT@v2.0.0"
        with:
          webhook_eventname: "gha-wikibase-profile-result"
          webhook_key: "${{secrets.IFTTT_WEBHOOK_KEY}}"
          value1: ${{ github.ref }} ${{ github.run_id }} ${{ github.run_number }}
          value2: ${{ matrix.images }} ${{ matrix.settings }} ${{ matrix.loads }} ${{ matrix.sql }} ${{ matrix.async }} ${{ matrix.instances }} 
          value3: ${{ steps.output-calc.outputs.elapsed }}